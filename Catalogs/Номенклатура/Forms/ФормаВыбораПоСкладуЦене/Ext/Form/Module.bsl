
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Список.Параметры.УстановитьЗначениеПараметра("Склад", Параметры.Склад);
	Список.Параметры.УстановитьЗначениеПараметра("ВидЦены", Параметры.ВидЦены);
	Если ЗначениеЗаполнено(Параметры.ДокументСсылка) Тогда
	    ВременнойМомент=Параметры.ДокументСсылка.МоментВремени();
	Иначе
		ВременнойМомент=Неопределено;
	КонецЕсли;
	Список.Параметры.УстановитьЗначениеПараметра("ДатаСреза", ВременнойМомент);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОтбора = Новый Структура("Номенклатура", Значение);
	МассивОтбора = ОтобранныеТовары.НайтиСтроки(ПараметрыОтбора);
	Если МассивОтбора.Количество()>0 Тогда
		Индекс = ОтобранныеТовары.Индекс(МассивОтбора[0]);
		НайденнаяСтрока = ОтобранныеТовары.Получить(Индекс);
		НайденнаяСтрока.Количество = НайденнаяСтрока.Количество + 1;
	Иначе
		НоваяСтрока = ОтобранныеТовары.Добавить();
		НоваяСтрока.Номенклатура = Значение;
		НоваяСтрока.Количество = 1;
	КонецЕсли;
	
	//МассивВозврата = Новый Массив;
	//Если ТипЗнч(Значение) = Тип("Массив") Тогда
	//	//тт=ТаблицаЗначенийВМассивСтруктур();
	//	//тт=ТаблицаЗначенийВРеквизитФормы();
	//	Для Каждого Строка Из Значение Цикл
	//		Элементы.Список.ТекущаяСтрока = Строка; 
	//		ТекДанные = Элементы.Список.ТекущиеДанные;
	//		СтруктураВозврата = Новый Структура("Номенклатура, Цена", Строка, ТекДанные.Цена);
	//		МассивВозврата.Добавить(СтруктураВозврата)
	//	КонецЦикла;
	//Иначе
	//	ТекДанные = Элемент.ТекущиеДанные;
	//	СтруктураВозврата = Новый Структура("Номенклатура, Цена", Значение, ТекДанные.Цена);
	//	МассивВозврата.Добавить(СтруктураВозврата)
	//КонецЕсли;
	//ОповеститьОВыборе(МассивВозврата); 
КонецПроцедуры

&НаСервере
Функция ТаблицаЗначенийВРеквизитФормы()
	
	МояТаблицаЗначений = ДинамическийСписокВТаблицуЗначений();
	
	ДобавляемыеРеквизиты = Новый Массив;
	УдаляемыеРеквизиты = Новый Массив;
	
	МассивКолонок = Новый Массив;
	ИмяТаблицыФормы = "ИмяТаблицыЗначений";
	
	ТаблицаФормы = РеквизитФормыВЗначение(ИмяТаблицыФормы);
	
	Для Каждого ТекКолонка из ТаблицаФормы.Колонки Цикл
		УдаляемыеРеквизиты.Добавить(ИмяТаблицыФормы + "." + ТекКолонка.Имя);
	КонецЦикла;
	
	Для Каждого ТекКолонка из МояТаблицаЗначений.Колонки Цикл
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ТекКолонка.Имя, ТекКолонка.ТипЗначения, ИмяТаблицыФормы));
		МассивКолонок.Добавить(ТекКолонка.Имя);
	КонецЦикла;
	
	// Добавим новые, удалим старые колонки
	ИзменитьРеквизиты(ДобавляемыеРеквизиты, УдаляемыеРеквизиты);
	// Поместим значение в реквизит формы
	ЗначениеВРеквизитФормы(МояТаблицаЗначений, ИмяТаблицыФормы);
	
	Возврат МассивКолонок;
	
КонецФункции // ТаблицаЗначенийВРеквизитФормы()
 

&НаСервере
Функция ТаблицаЗначенийВМассивСтруктур()
	МассивСтруктур = Новый Массив;
	МояТаблицаЗначений = ДинамическийСписокВТаблицуЗначений();
	Для Каждого СтрокаТЗ Из МояТаблицаЗначений Цикл
		СтрокаСтруктура = Новый Структура;
		Для Каждого КолонкаТЗ Из МояТаблицаЗначений.Колонки Цикл
			СтрокаСтруктура.Вставить(КолонкаТЗ.Имя, СтрокаТЗ[КолонкаТЗ.Имя]);
		КонецЦикла;
		МассивСтруктур.Добавить(СтрокаСтруктура);
	КонецЦикла;
	
	Возврат МассивСтруктур;
	
КонецФункции // ТаблицаЗначенийВМассивСтруктур()
 

&НаСервере
Функция ДинамическийСписокВТаблицуЗначений()

//Получаем схема компановки данных (здесь хранится текст запроса)
Схема = Элементы.Список.ПолучитьИсполняемуюСхемуКомпоновкиДанных();

//Получаем настройки пользователя (отборы, сортировки и т.п.)
Настройки = Элементы.Список.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();

//Выводим динамический список в таблицу значений
КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));

ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);

ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);

//Возвращаем полученную таблицу значений
Возврат Результат;

КонецФункции

&НаКлиенте
Процедура СписокОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура СписокПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте                               
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура СписокНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
КонецПроцедуры
